1..##void main() {
  List <int> a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89];
  for (int element in a) {
    if (element < 5){
      print(element);
    }
  }
}##

2..##void main() {
  List<int> a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89];
  List<int> b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];

  List<int> sameElements = findSameElements(a, b);

  print("Same Elements: $sameElements");
}

List<int> findSameElements(List<int> list1, List<int> list2) {
  Set<int> set1 = list1.toSet();
  Set<int> set2 = list2.toSet();
  
  Set<int> sameSet = Set<int>();

  
  for (int element in set1) {
    
    if (set2.contains(element)) {
      sameSet.add(element);
    }
  }

 
  List<int> sameElements = sameSet.toList();

  return sameElements;
}##

3..##bool isPalindrome(String s) {
  // Remove any non-alphanumeric characters and convert the string to lowercase
  String cleanedString =
      s.replaceAll(RegExp(r'[^a-zA-Z0-9]'), '').toLowerCase();

  // Compare the cleaned string with its reverse
  return cleanedString == cleanedString.split('').reversed.join();
}

void main() {
  String inputString = 'Mum'; // Replace this with user input if needed

  if (isPalindrome(inputString)) {
    print("The string is a palindrome.");
  } else {
    print("The string is not a palindrome.");
  }
}##

4..##List<int> extractFirstAndLastElements(List<int> inputList) {
  if (inputList.length < 2) {
    print("The list should contain at least two elements.");
    return [];
  }

  return [inputList.first, inputList.last];
}

void main() {
  List<int> a = [5, 10, 15, 20, 25];
  List<int> resultList = extractFirstAndLastElements(a);

  print("Original List: $a");
  print("New List: $resultList");
}
##

5..##import 'dart:io';

String reverseWordsOrder(String inputString) {
  List<String> words = inputString.split(' ');
  List<String> reversedWords = words.reversed.toList();
  return reversedWords.join(' ');
}

void main() {
  print("Enter a long string containing multiple words:");
  String? user_input = stdin.readLineSync();

  if (user_input != null) {
    String reversedString = reverseWordsOrder(user_input);
    print("Reversed Order: $reversedString");
  } else {
    print("No input provided.");
  }
}##

6..##List<T> removeDuplicates<T>(List<T> inputList) {
  Set<T> uniqueElements = Set<T>();
  List<T> result = [];

  for (T element in inputList) {
    if (!uniqueElements.contains(element)) {
      uniqueElements.add(element);
      result.add(element);
    }
  }

  return result;
}

void main() {
  List<int> inputList = [1, 2, 2, 3, 4, 4, 5, 5, 5, 6];
  List<int> resultList = removeDuplicates(inputList);

  print("Original List: $inputList");
  print("List with Duplicates Removed: $resultList");
}
##


